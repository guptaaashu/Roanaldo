# -*- coding: utf-8 -*-
"""ZS

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11zn6BCMLixn-bcgOqvPYfFfMSSabFjjm
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


database=pd.read_csv('/content/drive/My Drive/data.csv')

data= database.dropna(subset=['is_goal'])

data.head()

X = data.iloc[:, [1,7,8,9,11,12,13,19,23,24,25]].values
columns = ['match_event_id', 'game_season','remaining_sec','distance_of_shot','área_of_shot','shot_basics','range_of_shot','type_of_shot','remaining_min','power_shot','knockout']
X=pd.DataFrame(X, columns=columns)

X.info()

X['match_event_id'].fillna((X['match_event_id'].mean()), inplace=True)
X['match_event_id']= X.match_event_id.astype('int')


X['game_season'].fillna(X['game_season'].mode().values[0], inplace = True)
X['game_season']= X.game_season.astype('category')
X['game_season'] = X["game_season"].cat.codes

X['remaining_sec'].fillna((X['remaining_sec'].mean()), inplace=True)

X['distance_of_shot'].fillna((X['distance_of_shot'].mean()), inplace=True)

X['área_of_shot'].fillna(X['área_of_shot'].mode().values[0], inplace = True)
X['área_of_shot']= X.área_of_shot.astype('category')
X['área_of_shot'] = X["área_of_shot"].cat.codes

X['shot_basics'].fillna(X['shot_basics'].mode().values[0], inplace = True)
X['shot_basics']= X.shot_basics.astype('category')
X['shot_basics'] = X["shot_basics"].cat.codes

X['range_of_shot'].fillna(X['range_of_shot'].mode().values[0], inplace = True)
X['range_of_shot']= X.range_of_shot.astype('category')
X['range_of_shot'] = X["range_of_shot"].cat.codes

X['type_of_shot'].fillna(X['type_of_shot'].mode().values[0], inplace = True)
X['type_of_shot']= X.type_of_shot.astype('category')
X['type_of_shot'] = X["type_of_shot"].cat.codes


X['remaining_min'].fillna((X['remaining_min'].mean()), inplace=True)

X['power_shot'].fillna(X['power_shot'].mode().values[0], inplace=True)

X['knockout'].fillna((X['knockout'].mode().values[0]), inplace=True)

Y= data.iloc[:, [10]].values
columns=['is_goal']
Y=pd.DataFrame(Y, columns=columns)

Y.head()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.1, random_state = 0)

import xgboost as xgb

xg_reg = xgb.XGBRegressor(objective ='binary:logistic',learning_rate = 0.06,max_depth = 4,n_estimators=150,eval_metric = "error",min_child_weight=10,gamma=5,subsample = 0.9,colsample_bytree = 0.8,silent=1,seed=123)

xg_reg.fit(X_train,y_train)

preds = xg_reg.predict(X_test)

preds= (preds>0.5)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test, preds)

acc=(cm[0][0]+cm[1][1])/(cm[0][0]+cm[0][1]+cm[1][0]+cm[1][1])

data = database[database.isnull().is_goal]

data.reset_index(inplace=True)

data['index']=data['level_0']


X = data.iloc[:, [1,7,8,9,11,12,13,19,23,24,25]].values
columns = ['match_event_id', 'game_season','remaining_sec','distance_of_shot','área_of_shot','shot_basics','range_of_shot','type_of_shot','remaining_min','power_shot','knockout']
X=pd.DataFrame(X, columns=columns)

X['game_season'].fillna(X['game_season'].mode().values[0], inplace = True)
X['game_season']= X.game_season.astype('category')
X['game_season'] = X["game_season"].cat.codes

X['remaining_sec'].fillna((X['remaining_sec'].mean()), inplace=True)

X['distance_of_shot'].fillna((X['distance_of_shot'].mean()), inplace=True)

X['área_of_shot'].fillna(X['área_of_shot'].mode().values[0], inplace = True)
X['área_of_shot']= X.área_of_shot.astype('category')
X['área_of_shot'] = X["área_of_shot"].cat.codes

X['shot_basics'].fillna(X['shot_basics'].mode().values[0], inplace = True)
X['shot_basics']= X.shot_basics.astype('category')
X['shot_basics'] = X["shot_basics"].cat.codes

X['range_of_shot'].fillna(X['range_of_shot'].mode().values[0], inplace = True)
X['range_of_shot']= X.range_of_shot.astype('category')
X['range_of_shot'] = X["range_of_shot"].cat.codes

X['type_of_shot'].fillna(X['type_of_shot'].mode().values[0], inplace = True)
X['type_of_shot']= X.type_of_shot.astype('category')
X['type_of_shot'] = X["type_of_shot"].cat.codes


X['remaining_min'].fillna((X['remaining_min'].mean()), inplace=True)

X['power_shot'].fillna(X['power_shot'].mode().values[0], inplace=True)

X['knockout'].fillna((X['knockout'].mode().values[0]), inplace=True)
X['match_event_id'].fillna((X['match_event_id'].mean()), inplace=True)
X['match_event_id']= X.match_event_id.astype('int')


preds = xg_reg.predict(X)

columns=['is_goal']

preds=pd.DataFrame(preds, columns=columns)

preds['shot']=data['index']

preds.info()

preds['shot_id_number']=preds['shot']+1

pred = preds.iloc[:, [2,0]].values

columns=['shot_id_number','is_goal']

pred=pd.DataFrame(pred, columns=columns)

pred.to_csv('filename.csv',index=False)